import { RiImageEditLine } from "react-icons/ri";
import "./Write.css";
import React, { useState, useContext, useRef } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import ReactQuill from "react-quill";
import "react-quill/dist/quill.snow.css";
import WritePost from "../../context/WritePost";
import CategorySelector from "../../components/Catogories/CategorySelector";
const initial = {
  id: "",
  img: "",
  title: "",
  description: "",
  date: "",
  categories: "",
};

const toolbarOptions = [
  ["bold", "italic", "underline", "strike"],
  ["blockquote", "code-block"],
  ["link", "image", "video", "formula"],
  [{ header: 1 }, { header: 2 }],
  [{ list: "ordered" }, { list: "bullet" }, { list: "check" }],
  [{ script: "sub" }, { script: "super" }],
  [{ indent: "-1" }, { indent: "+1" }],
  [{ direction: "rtl" }],
  [{ size: ["small", false, "large", "huge"] }],
  [{ header: [1, 2, 3, 4, 5, 6, false] }],
  [{ color: [] }, { background: [] }],
  [{ font: [] }],
  [{ align: [] }],
  ["clean"],
];

function Write() {
  const { selectedCategories } = useContext(WritePost);
  const [form, setForm] = useState(initial);
  const [value, setValue] = useState("");
  const [file, setFile] = useState(undefined);
  const navigate = useNavigate();
  const fileRef = useRef();

  const handleFormChanges = (event) => {
    const { name, value } = event.target;
    setForm({ ...form, [name]: value });
  };

  const CreateBlog = (event) => {
    event.preventDefault();
    const D = new Date();
    const fulldate = `${D.getMonth()}/${D.getDate()}/${D.getFullYear()}`;
    const updatedForm = {
      ...form,
      description: value,
      categories: selectedCategories,
      date: fulldate,
    };
    console.log(form.categories);
    axios
      .post("http://localhost:8080/blogPost", updatedForm, {
        headers: { "Content-Type": "application/json" },
      })
      .then((response) => {
        console.log("Post successful:", response.data);
        navigate("/");
        window.location.reload();
      })
      .catch((error) => {
        console.error("Error posting data:", error);
      });
    console.log(form);
  };

  return (
    <div className="write">
      <img
        className="writeImg"
        src="https://images.ctfassets.net/hrltx12pl8hq/01rJn4TormMsGQs1ZRIpzX/16a1cae2440420d0fd0a7a9a006f2dcb/Artboard_Copy_231.jpg"
        alt=""
      />
      <form className="writeForm" onSubmit={CreateBlog}>
        <div className="writeFormGroup">
          <label htmlFor="fileInput">
            <RiImageEditLine className="writeIcon" />
          </label>
          <input
            type="file"
            onChange={(event) => setFile(event.target.files[0])}
            ref={fileRef}
            name="photo"
            id="fileInput"
            style={{ display: "none" }}
          />
          <input
            type="text"
            placeholder="Title"
            name="title"
            className="writeInput"
            autoFocus={true}
            onChange={handleFormChanges}
          />
          <input
            type="text"
            placeholder="Enter ID"
            name="id"
            onChange={handleFormChanges}
          />
          <input
            type="text"
            placeholder="Enter Image URL"
            name="img"
            onChange={handleFormChanges}
          />
        </div>
        <button type="submit" className="writeSubmit">
          Publish
        </button>
      </form>
      <CategorySelector />
      <div className="writeTextarea">
        <ReactQuill
          className="Editor"
          value={value}
          onChange={setValue}
          toolbar={toolbarOptions}
        />
      </div>
      <div className="preview">
        <h1 className="previewHeader">PREVIEW</h1>
        <div className="previewData">
          <ReactQuill value={value} readOnly={true} theme="bubble" />
        </div>
      </div>
    </div>
  );
}

export default Write;
